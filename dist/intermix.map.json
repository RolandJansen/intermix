{"version":3,"sources":["d:/Users/jansen/git/intermix.js/node_modules/browser-pack/_prelude.js","src/main.js","d:/Users/jansen/git/intermix.js/src/core.js","d:/Users/jansen/git/intermix.js/src/Sound.js","d:/Users/jansen/git/intermix.js/src/SoundWave.js"],"names":["Intermix","require","SoundWave","Sound","module","exports","audioCtx","window","AudioContext","webkitAudioContext","soundBuffer","this","buffer","queue","loop","isPaused","gainNode","pannerNode","soundLength","startOffset","startTime","loopStart","loopEnd","Error","duration","setupAudioChain","prototype","createGain","createStereoPanner","connect","destination","gain","value","console","log","createBufferSource","self","bufferSource","onended","destroyBufferSource","bsNode","disconnect","forEach","node","index","splice","length","play","delay","playLooped","currentTime","bs","push","start","stop","paused","pause","setLoopStart","setLoopEnd","resetLoop","setFrequency","freq","playbackRate","getFrequency","setTone","semiTone","detune","getTone","getUID","Math","random","toString","substr","binaryData","collection","decodeAudioData","then","decoded"],"mappings":"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","file":"bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","'use strict';\r\n\r\n//Intermix = require('./core.js');\r\nvar Intermix = require('./core.js') || {};\r\nIntermix.SoundWave = require('./SoundWave.js');\r\nIntermix.Sound = require('./Sound.js');\r\n\r\nmodule.exports = Intermix;\r\n","/**\r\n * This simply creates the audio context objects\r\n * and exports it.\r\n *\r\n * TODO: - Should we do backwards-compatibility for older api-versions?\r\n *       - Check for mobile/iOS compatibility.\r\n *       - Check if we're running on node (and throw an error if so)\r\n */\r\n'use strict';\r\n\r\nvar audioCtx = null;\r\n\r\n(function() {\r\n\r\n  window.AudioContext = window.AudioContext || window.webkitAudioContext;\r\n\r\n  if (window.AudioContext) {\r\n    audioCtx = new window.AudioContext();\r\n  } else {\r\n    //TODO: throw error, probably surround with try/catch\r\n  }\r\n\r\n})();\r\n\r\nmodule.exports = {\r\n  audioCtx: audioCtx\r\n};\r\n","'use strict';\r\n\r\nvar Sound = function(audioCtx, soundBuffer) {\r\n\r\n  this.audioCtx = null;\r\n  this.buffer = null;\r\n  this.queue = [];          //all currently active streams\r\n  this.loop = false;\r\n  this.isPaused = false;\r\n  this.gainNode = null;\r\n  this.pannerNode = null;\r\n\r\n  this.soundLength = 0;\r\n  this.startOffset = 0;\r\n  this.startTime = 0;\r\n  this.loopStart = 0;\r\n  this.loopEnd = null;\r\n\r\n  if (soundBuffer && audioCtx) {\r\n    this.audioCtx = audioCtx;\r\n    this.buffer = soundBuffer;\r\n    this.soundLength = this.loopEnd = soundBuffer.duration;\r\n    this.setupAudioChain();\r\n  } else {\r\n    throw new Error('Error initialising Sound object: parameter missing.');\r\n  }\r\n};\r\n\r\nSound.prototype.setupAudioChain = function() {\r\n  this.gainNode = this.audioCtx.createGain();\r\n  this.pannerNode = this.audioCtx.createStereoPanner();\r\n  this.gainNode.connect(this.pannerNode);\r\n  this.pannerNode.connect(this.audioCtx.destination);\r\n  this.gainNode.gain.value = 1;\r\n  console.log('audiochain ready');\r\n};\r\n\r\nSound.prototype.createBufferSource = function() {\r\n  var self = this;\r\n  var bufferSource = this.audioCtx.createBufferSource();\r\n  bufferSource.buffer = this.buffer;\r\n  bufferSource.connect(this.gainNode);\r\n  bufferSource.onended = function() {\r\n    console.log('onended fired');\r\n    self.destroyBufferSource(bufferSource);\r\n  };\r\n  return bufferSource;\r\n};\r\n\r\nSound.prototype.destroyBufferSource = function(bsNode) {\r\n  var self = this;\r\n  bsNode.disconnect();\r\n  this.queue.forEach(function(node, index) {\r\n    if (node === bsNode) {\r\n      self.queue.splice(index, 1);\r\n    }\r\n  });\r\n  bsNode = null; //probably futile\r\n  console.log('BufferSourceNode destroyed');\r\n  console.log('queue in queue: ' + this.queue.length);\r\n};\r\n\r\nSound.prototype.play = function(delay, playLooped) {\r\n  var startTime = 0;\r\n\r\n  if (delay) {\r\n    console.log('set start time: ' + delay);\r\n    startTime = delay;\r\n  } else {\r\n    startTime = this.audioCtx.currentTime;\r\n  }\r\n  var bs = this.createBufferSource();\r\n  bs.loop = playLooped;\r\n\r\n  // if (playLooped) {\r\n  //   bs.loopStart = this.loopStart;\r\n  //   bs.loopEnd = this.loopEnd;\r\n  // }\r\n\r\n  // if (this.startOffset === 0 || this.startOffset >= this.buffer.duration) {\r\n  //   console.log('resetting starttime');\r\n  //   this.startTime = this.audioCtx.currentTime;\r\n  // }\r\n  this.queue.push(bs);\r\n  //bs.start(startTime, this.startOffset);\r\n  bs.start(startTime);\r\n\r\n  this.startOffset = 0;\r\n};\r\n\r\nSound.prototype.stop = function(paused) {\r\n  if (paused) { //this has to be rewritten since there could be multiple start times.\r\n    this.startOffset = this.audioCtx.currentTime - this.startTime;\r\n    this.paused = false;\r\n  }\r\n  if (this.queue.length > 0) {\r\n    this.queue.forEach(function(node) {\r\n      node.stop();\r\n    });\r\n  } else {\r\n    //fail silently\r\n  }\r\n};\r\n\r\nSound.prototype.pause = function() {\r\n  this.isPaused = true;\r\n  this.stop(this.isPaused);\r\n};\r\n\r\nSound.prototype.setLoopStart = function(value) {\r\n  this.loopStart = value * this.soundLength;\r\n  this.bufferSource.loopStart = this.loopStart;\r\n};\r\n\r\nSound.prototype.setLoopEnd = function(value) {\r\n  this.loopEnd = value * this.soundLength;\r\n  this.bufferSource.loopEnd = this.loopEnd;\r\n};\r\n\r\nSound.prototype.resetLoop = function() {\r\n  this.loopStart = 0;\r\n  this.loopEnd = this.soundLength;\r\n};\r\n\r\nSound.prototype.setFrequency = function(freq) {\r\n  this.bufferSource.playbackRate.value = freq;\r\n};\r\n\r\nSound.prototype.getFrequency = function() {\r\n  return this.bufferSource.playbackRate.value;\r\n};\r\n\r\nSound.prototype.setTone = function(semiTone) {\r\n  this.bufferSource.detune.value = semiTone * 100;\r\n};\r\n\r\nSound.prototype.getTone = function() {\r\n  return this.bufferSource.detune.value;\r\n};\r\n\r\nSound.prototype.getUID = function() {\r\n  return Math.random().toString().substr(2, 8);\r\n};\r\n\r\nmodule.exports = Sound;\r\n","'use strict';\r\n\r\nvar SoundWave = function(audioCtx, binaryData, collection) {\r\n\r\n  this.audioCtx = null;\r\n  this.buffer = null;\r\n\r\n\r\n  if (audioCtx) {\r\n    this.audioCtx = audioCtx;\r\n  } else {\r\n    console.log('No AudioContext found');\r\n  }\r\n\r\n  var self = this;\r\n\r\n  if (binaryData) {\r\n    this.audioCtx.decodeAudioData(binaryData).then(function(decoded) {\r\n      self.buffer = decoded;\r\n      console.log('buffer created');\r\n    });\r\n  } else {\r\n    //TODO: throw error\r\n  }\r\n\r\n  if (collection) {\r\n    //TODO: put buffer into soundbank\r\n  }\r\n\r\n};\r\n\r\nmodule.exports = SoundWave;\r\n"]}