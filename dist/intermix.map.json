{"version":3,"sources":["d:/Users/jansen/git/intermix.js/node_modules/browser-pack/_prelude.js","src/main.js","d:/Users/jansen/git/intermix.js/src/core.js","d:/Users/jansen/git/intermix.js/src/SoundWave.js"],"names":["Intermix","require","module","exports","AudioContext","window","webkitAudioContext","this","audioCtx","output","destination","console","log","im","SoundWave","binaryData","collection","bufferSource","prototype","play","loop","stop"],"mappings":"AAAA;ACAA,YAEA,IAAIA,UAAWC,QAAQ,YACvBA,SAAQ,kBAERC,OAAOC,QAAUH;;AELjB,YAEA,IAAIa,IAAKZ,QAAQ,YAEjBY,IAAGC,UAAY,SAASC,EAAYC,GAElCT,KAAKU,aAAe,KAWpBN,QAAQC,IAAI,cAOdC,GAAGC,UAAUI,UAAUC,KAAO,SAASC,GACrCT,QAAQC,IAAIQ,IAKdP,GAAGC,UAAUI,UAAUG,KAAO,aAI9BnB,OAAOC,QAAUU,GAAGC;;AD1BpB,YAEA,IAAId,UAAW,WAIb,GAAII,GAAeC,OAAOD,cAAgBC,OAAOC,kBACjDC,MAAKC,SAAW,KAChBD,KAAKE,OAAS,KAEVL,IACFG,KAAKC,SAAW,GAAIJ,IAKtBG,KAAKE,OAASF,KAAKC,SAASE,YAC5BC,QAAQC,IAAIL,KAAKE,QAInBP,QAAOC,QAAUH","file":"bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","'use strict';\r\n\r\nvar Intermix = require('./core.js');\r\nrequire('./SoundWave.js');\r\n\r\nmodule.exports = Intermix;\r\n","/**\r\n * This is the starting point of the library.\r\n * It spawns the audio context object and\r\n * connects it to the audio output.\r\n *\r\n * TODO: - Should we do backwards-compatibility for older api-versions?\r\n *       - Check for mobile/iOS compatibility.\r\n */\r\n'use strict';\r\n\r\nvar Intermix = function() {\r\n  /**\r\n   * create audio context\r\n   */\r\n  var AudioContext = window.AudioContext || window.webkitAudioContext;\r\n  this.audioCtx = null;\r\n  this.output = null;\r\n\r\n  if (AudioContext) {\r\n    this.audioCtx = new AudioContext();\r\n  } else {\r\n    //throw error, probably surround with try/catch\r\n  }\r\n\r\n  this.output = this.audioCtx.destination;\r\n  console.log(this.output);\r\n\r\n};\r\n\r\nmodule.exports = Intermix;\r\n","'use strict';\r\n\r\nvar im = require('./core.js');\r\n\r\nim.SoundWave = function(binaryData, collection) {\r\n\r\n  this.bufferSource = null;\r\n\r\n  if (binaryData) {\r\n    //create an audio buffer with audioCtx.decodeAudioData\r\n  } else {\r\n    //throw error\r\n  }\r\n\r\n  if (collection) {\r\n    //put buffer into soundbank\r\n  }\r\n  console.log('SoundWave');\r\n\r\n  //todo:\r\n  //put the buffer into a collection called soundbank\r\n  //create methods to play, stop and loop the sound.\r\n};\r\n\r\nim.SoundWave.prototype.play = function(loop) {\r\n  console.log(loop);\r\n  //create audiobuffersource, attach to destination\r\n  //when playing is stopped, destroy buffersource and routing\r\n};\r\n\r\nim.SoundWave.prototype.stop = function() {\r\n  //stop playing the buffersource, destroy everything\r\n};\r\n\r\nmodule.exports = im.SoundWave;\r\n"]}