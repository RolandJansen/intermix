{"version":3,"sources":["d:/Users/jansen/git/intermix.js/node_modules/browser-pack/_prelude.js","src/main.js","d:/Users/jansen/git/intermix.js/src/core.js","d:/Users/jansen/git/intermix.js/src/events.js","d:/Users/jansen/git/intermix.js/src/Sound.js","d:/Users/jansen/git/intermix.js/src/Sequencer.js","d:/Users/jansen/git/intermix.js/src/SoundWave.js","d:/Users/jansen/git/intermix.js/src/Part.js","d:/Users/jansen/git/intermix.js/src/scheduleWorker.js","d:/Users/jansen/git/intermix.js/node_modules/webworkify/index.js"],"names":["intermix","require","events","SoundWave","Sound","Sequencer","Part","module","exports","audioCtx","window","AudioContext","webkitAudioContext","Error","evProp","evType","note","control","evClass","audio","synth","fx","midi","osc","validateClass","eClass","hasOwnProperty","validateType","eType","validatePropInstrument","instr","validatePropToneVelo","value","isNaN","Number","isInteger","validatePropDuration","validateProps","eProps","type","key","indexOf","convertTone","tone","notes","str","toLowerCase","match","substring","length","oct","slice","createEvent","class","props","createAudioNote","velocity","duration","instrument","property","core","soundWave","this","wave","ac","queue","loop","gainNode","pannerNode","soundLength","isPaused","startOffset","startOffsets","startTime","loopStart","loopEnd","playbackRate","detune","buffer","setupAudioChain","prototype","createGain","createStereoPanner","connect","destination","gain","createBufferSource","self","bufferSource","onended","destroyBufferSource","bsNode","disconnect","forEach","node","index","splice","start","playLooped","delay","resume","currentTime","bs","tmpPlaybackRate","push","stop","pause","processSeqEvent","seqEvent","setLoopStart","setLoopEnd","releaseLoop","resetLoop","setPlaybackRate","getPlaybackRate","setTone","semiTone","getTone","setDetune","getDetune","getUID","Math","random","toString","substr","work","worker","bpm","resolution","interval","lookahead","runqueue","timePerStep","nextStepTime","nextStep","lastPlayedStep","isRunning","animationFrame","setTimePerStep","scheduleWorker","onmessage","e","data","scheduler","postMessage","limit","addPartsToRunqueue","fireEvents","setQueuePointer","part","pointer","deletePartsFromRunqueue","indices","id","markForDelete","unshift","seqEvents","pattern","position","runQueue","requestAnimationFrame","draw","bind","lookAheadDelta","stepsAhead","round","updateFrame","console","log","addPart","removePart","Array","setBpm","getLastPlayedStep","copyArray","sourceArray","destArray","i","audioSrc","metaData","ArrayBuffer","decodeAudioData","concatBinariesToAudioBuffer","loadFile","response","binBuffers","loadFiles","rawAudioSrc","then","decoded","binaryBuffers","audioBuffer","binBuffer","tmpAudioBuffer","addWaveMetaData","appendAudioBuffer","buffer1","buffer2","numberOfChannels","min","tmp","createBuffer","sampleRate","channel","getChannelData","set","existingBuffer","newBuffer","end","filename","onloadCallback","async","asynchronously","request","XMLHttpRequest","addEventListener","updateProgress","transferComplete","transferFailed","transferCanceled","open","responseType","onload","send","filenames","names","split","name","sortBinBuffers","map","el","multiply","initPattern","addEvent","pos","removeEvent","getLength","getNotePositions","positions","extendOnTop","extLength","extension","concat","extendOnEnd","timer","setInterval","clearInterval","bundleFn","arguments","sources","cache","stringify","JSON","fn","wkey","cacheKeys","Object","keys","l","exp","floor","pow","wcache","Function","skey","scache","src","join","URL","webkitURL","mozURL","msURL","Worker","createObjectURL","Blob"],"mappings":"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","file":"bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","'use strict';\r\n\r\n//intermix = require('./core.js');\r\nvar intermix = require('./core.js') || {};\r\nintermix.events = require('./events.js');\r\nintermix.SoundWave = require('./SoundWave.js');\r\nintermix.Sound = require('./Sound.js');\r\nintermix.Sequencer = require('./Sequencer.js');\r\nintermix.Part = require('./Part.js');\r\n\r\nmodule.exports = intermix;\r\n","/**\r\n * This is the foundation of the Intermix library.\r\n * It simply creates the audio context objects\r\n * and exports it so it can be easily consumed\r\n * from all classes of the library.\r\n *\r\n * @return {AudioContext} The AudioContext object\r\n *\r\n * @todo Should we do backwards-compatibility for older api-versions?\r\n * @todo Check for mobile/iOS compatibility.\r\n * @todo Check if we're running on node\r\n *\r\n * @example <caption>Suspend and resume the audio context to\r\n * create a pause button. This should be used with createAudioWorker\r\n * as an error will be thrown when suspend is called on an offline audio context.\r\n * You can also pause single sounds with <i>Sound.pause()</i>.\r\n * Please read <a href=\"https://developer.mozilla.org/de/docs/Web/API/AudioContext/suspend\">the developer docs at MDN</a>\r\n * to get a better idea of this.</caption>\r\n * susresBtn.onclick = function() {\r\n *   if(Intermix.state === 'running') {\r\n *     Intermix.suspend().then(function() {\r\n *       susresBtn.textContent = 'Resume context';\r\n *     });\r\n *   } else if (Intermix.state === 'suspended') {\r\n *     Intermix.resume().then(function() {\r\n *       susresBtn.textContent = 'Suspend context';\r\n *     });\r\n *   }\r\n * }\r\n */\r\n'use strict';\r\n\r\nvar audioCtx = null;\r\n\r\n(function() {\r\n\r\n  window.AudioContext = window.AudioContext || window.webkitAudioContext;\r\n\r\n  if (window.AudioContext) {\r\n    audioCtx = new window.AudioContext();\r\n  } else {\r\n    throw new Error('Couldn\\'t initialize the audio context.');\r\n  }\r\n\r\n})();\r\n\r\nmodule.exports = audioCtx;\r\n","'use strict';\r\n\r\n/**\r\n * This is not about javascript events! It's just\r\n * a definition of the events that the sequencer can handle plus\r\n * some functions to create valid events.\r\n * The class defines which subsystem is invoked to process the event.\r\n * Every class can have several types and a type consists of one or\r\n * more properties.\r\n * @example <caption>Create a note event for an audio object</caption>\r\n * var note = intermix.events.createAudioNote('c3', 65, 128, aSoundObject);\r\n */\r\n\r\n/**\r\n * All valid event properties in one handy array.\r\n * @type {Array}\r\n */\r\nvar evProp = [\r\n  'instrument', // the event receiver\r\n  'tone',       // Int between 0 and 127 beginning at c0\r\n  'duration',   // Int representing a number of 64th notes\r\n  'velocity',   // Int between 0 and 127\r\n  'pitch',\r\n  'volume',\r\n  'pan'\r\n];\r\n\r\n/**\r\n * All valid event types and the properties assotiated with them.\r\n * Type are valid with one, several or all of its properties.\r\n * @type {Object}\r\n */\r\nvar evType = {\r\n  'note': [ evProp[0], evProp[1], evProp[2], evProp[3] ],\r\n  'control': [ evProp[4], evProp[5], evProp[6] ]\r\n};\r\n\r\n/**\r\n * All valid event classes and the types assotiated with them.\r\n * @type {Object}\r\n */\r\nvar evClass = {\r\n  'audio': [evType.note, evType.control],\r\n  'synth': [evType.note, evType.control],\r\n  'fx': [],\r\n  'midi': [],\r\n  'osc': []\r\n};\r\n\r\n/**\r\n * Validates the class of a sequencer event\r\n * @private\r\n * @param  {String}   eClass Event class\r\n * @return {boolean}  true if class exists, false if not\r\n */\r\nvar validateClass = function(eClass) {\r\n  if (evClass.hasOwnProperty(eClass)) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n\r\n/**\r\n * Validates the type of a sequencer event\r\n * @private\r\n * @param  {String}   eType Event type\r\n * @return {boolean}  true if type exists, false if not\r\n */\r\nvar validateType = function(eType) {\r\n  if (evType.hasOwnProperty(eType)) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n\r\n/**\r\n * Checks if an instrument is an object.\r\n * This is a poorly weak test but that's\r\n * all we can do here.\r\n * @param  {Object} instr An instrument object\r\n * @return {boolean}      true if it's an object, false if not\r\n */\r\nvar validatePropInstrument = function(instr) {\r\n  if (typeof instr === 'object') {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n\r\n/**\r\n * Validates if a tone or velocity value is\r\n * an integer between 0 and 127.\r\n * @private\r\n * @param  {Int}  value   The number that represents a tone\r\n * @return {boolean}      True if its a valid tone, false if not\r\n */\r\nvar validatePropToneVelo = function(value) {\r\n  if (!isNaN(value) && Number.isInteger(value) && value >= 0 && value <= 127) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n\r\n/**\r\n * Validates if a duration is a positive integer.\r\n * @private\r\n * @param  {Int}  value   Number representing multiple 64th notes\r\n * @return {boolean}      True if its a valid duration, false if not\r\n */\r\nvar validatePropDuration = function(value) {\r\n  if (!isNaN(value) && Number.isInteger(value) && value >= 0) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n\r\n/**\r\n * Validates an object of event properties.\r\n * It checks the properties are valid for the given type.\r\n * @private\r\n * @param  {Object} eProps  Object with event properties\r\n * @param  {String} eType   Event type to validate against\r\n * @return {boolean}        true if all props are valid, false if not\r\n */\r\nvar validateProps = function(eProps, eType) {\r\n  var type = evType[eType];\r\n  for (var key in eProps)  {\r\n    if (evProp.indexOf(key) === -1 &&\r\n    type.indexOf(key) === -1) {\r\n      return false;\r\n    }\r\n  }\r\n  return true;\r\n};\r\n\r\n/**\r\n * Takes a string of the form c3 or d#4 and\r\n * returns the corresponding number.\r\n * @param  {String} tone String representing a note\r\n * @return {Int}         Number representing a note\r\n */\r\nvar convertTone = function(tone) {\r\n  var notes = ['c', 'c#', 'd', 'd#', 'e', 'f', 'f#', 'g', 'g#', 'a', 'a#', 'b'];\r\n  var str = tone.toLowerCase();\r\n\r\n  if (str.match(/^[a-h]#?[0-9]$/)) {\r\n    var note = str.substring(0, str.length - 1);\r\n    var oct = str.slice(-1);\r\n\r\n    if (note === 'h') {\r\n      note = 'b';\r\n    }\r\n    return notes.indexOf(note) + oct * 12;\r\n  } else {\r\n    throw new Error('Unvalid string. Has to be like [a-h]<#>[0-9]');\r\n  }\r\n};\r\n\r\n/**\r\n * Creates a sequencer event.\r\n * @private\r\n * @param  {String} eClass Event class\r\n * @param  {String} eType  Event type\r\n * @param  {Object} eProps Object with event properties\r\n * @return {Object}        Sequencer event\r\n */\r\nvar createEvent = function(eClass, eType, eProps) {\r\n  if (validateClass(eClass) &&\r\n    validateType(eType) &&\r\n    validateProps(eProps, eType)) {\r\n    return {\r\n      'class': eClass,\r\n      'type': eType,\r\n      'props': eProps\r\n    };\r\n  } else {\r\n    throw new Error('Unable to create sequencer event. Wrong parameters');\r\n  }\r\n};\r\n\r\n/**\r\n * Creates an audio note event\r\n * @param  {Int|String} tone     Tone between 0 and 127 or string (c3, d#4)\r\n * @param  {Int}        velocity Velocity between 0 and 127\r\n * @param  {Int}        duration Duration in 64th notes\r\n * @return {Object}              All properties in one object\r\n */\r\nvar createAudioNote = function(tone, velocity, duration, instr) {\r\n  var props = {};\r\n  if (typeof tone === 'string') {\r\n    tone = convertTone(tone);\r\n  }\r\n  if (tone && validatePropToneVelo(tone)) {\r\n    props.tone = tone;\r\n  }\r\n  if (velocity && validatePropToneVelo(velocity)) {\r\n    props.velocity = velocity;\r\n  }\r\n  if (duration && validatePropDuration(duration)) {\r\n    props.duration = duration;\r\n  }\r\n  if (instr && validatePropInstrument(instr)) {\r\n    props.instrument = instr;\r\n  } else {\r\n    throw new Error('A sequencer event must have an instrument as property');\r\n  }\r\n  return createEvent('audio', 'note', props);\r\n};\r\n\r\nmodule.exports = {\r\n  class: evClass,\r\n  type: evType,\r\n  property: evProp,\r\n  createAudioNote: createAudioNote\r\n};\r\n","'use strict';\r\n\r\nvar core = require('./core.js');\r\n\r\n/**\r\n * <p>\r\n * Play a sound that can be looped. Pause/Start works sample-accurate\r\n * at any rate. Hit the start button multiple times to have multiple\r\n * sounds played. All parameters are adjustable in realtime.\r\n * </p>\r\n *\r\n * @example\r\n * var soundWave = new intermix.SoundWave('audiofile.wav');\r\n * var sound = new intermix.Sound(soundWave);\r\n * sound.start();\r\n * @tutorial Sound\r\n * @constructor\r\n * @param  {Object} soundWave SoundWave object including the buffer with audio data to be played\r\n */\r\nvar Sound = function(soundWave) {\r\n\r\n  this.wave = null;\r\n  this.ac = core;           //currently just used for tests\r\n  this.queue = [];          //all currently active streams\r\n  this.loop = false;\r\n  this.gainNode = null;\r\n  this.pannerNode = null;\r\n\r\n  this.soundLength = 0;\r\n  this.isPaused = false;\r\n  this.startOffset = 0;\r\n  this.startOffsets = [];   //holds start offsets if paused\r\n  this.startTime = 0;       //when the sound starts to play\r\n  this.loopStart = 0;\r\n  this.loopEnd = null;\r\n  this.playbackRate = 1;\r\n  this.detune = 0;\r\n\r\n  if (soundWave) {\r\n    this.wave = soundWave;\r\n    this.buffer = soundWave.buffer;\r\n    this.soundLength = this.loopEnd = this.buffer.duration;\r\n    this.setupAudioChain();\r\n  } else {\r\n    throw new Error('Error initialising Sound object: parameter missing.');\r\n  }\r\n};\r\n\r\n/**\r\n * Creates a gain and stereo-panner node, connects them\r\n * (gain -> panner) and sets gain to 1 (max value).\r\n * @private\r\n * @return {Void}\r\n */\r\nSound.prototype.setupAudioChain = function() {\r\n  this.gainNode = core.createGain();\r\n  this.pannerNode = core.createStereoPanner();\r\n  this.gainNode.connect(this.pannerNode);\r\n  this.pannerNode.connect(core.destination);\r\n  this.gainNode.gain.value = 1;\r\n};\r\n\r\n/**\r\n * Creates and configures a BufferSourceNode\r\n * that can be played once and then destroys itself.\r\n * @private\r\n * @return {BufferSourceNode} The BufferSourceNode\r\n */\r\nSound.prototype.createBufferSource = function() {\r\n  var self = this;\r\n  var bufferSource = core.createBufferSource();\r\n  bufferSource.buffer = this.buffer;\r\n  bufferSource.connect(this.gainNode);\r\n  bufferSource.onended = function() {\r\n    //console.log('onended fired');\r\n    self.destroyBufferSource(bufferSource);\r\n  };\r\n  return bufferSource;\r\n};\r\n\r\n/**\r\n * Destroyes a given AudioBufferSourceNode and deletes it\r\n * from the sourceNode queue. This is used in the onended\r\n * callback of all BufferSourceNodes to avoid dead references.\r\n * @private\r\n * @param  {bsNode} bsNode the bufferSource to be destroyed.\r\n */\r\nSound.prototype.destroyBufferSource = function(bsNode) {\r\n  bsNode.disconnect();\r\n  this.queue.forEach(function(node, index) {\r\n    if (node === bsNode) {\r\n      this.queue.splice(index, 1);\r\n    }\r\n  }, this);\r\n};\r\n\r\n/**\r\n * Starts a sound (AudioBufferSourceNode) and stores a references\r\n * in a queue. This enables you to play multiple sounds at once\r\n * and even stop them all at a given time.\r\n * @param  {Boolean} playLooped Whether the sound should be looped or not\r\n * @param  {float}   delay      Time in seconds the sound pauses before the stream starts\r\n * @param  {float}   duration   Time preriod after the stream should end\r\n * @return {Void}\r\n */\r\nSound.prototype.start = function(playLooped, delay, duration) {\r\n  if (this.isPaused && this.queue.length > 0) {\r\n    this.resume();\r\n  } else {\r\n    var startTime = 0;\r\n\r\n    if (delay) {\r\n      startTime = delay;\r\n    } else {\r\n      startTime = core.currentTime;\r\n    }\r\n    var bs = this.createBufferSource();\r\n\r\n    if (playLooped) {\r\n      bs.loop = playLooped;\r\n      bs.loopStart = this.loopStart;\r\n      bs.loopEnd = this.loopEnd;\r\n    }\r\n    bs.playbackRate.value = bs.tmpPlaybackRate = this.playbackRate;\r\n    bs.detune.value = this.detune;\r\n    bs.startTime = startTime;   // extend node with a starttime property\r\n\r\n    this.queue.push(bs);\r\n    if (duration) {\r\n      bs.start(startTime, this.startOffset, duration);\r\n    } else {\r\n      bs.start(startTime, this.startOffset);\r\n    }\r\n\r\n    this.startOffset = 0;\r\n  }\r\n};\r\n\r\n/**\r\n * Stops all audio stream, even the ones that are just scheduled.\r\n * It also cleans the queue so that the sound object is ready for another round.\r\n * @return {Void}\r\n */\r\nSound.prototype.stop = function() {\r\n  this.queue.forEach(function(node) {\r\n    node.stop();\r\n    node.disconnect();\r\n  });\r\n  this.queue = [];  //release all references\r\n};\r\n\r\n/**\r\n * Stops all audio streams of this sound temporarily.\r\n * This currently just works in Chrome 49+ only.\r\n * If you want a global, accurate pause function\r\n * use suspend/resume from the core module.\r\n * @return  {Void}\r\n */\r\nSound.prototype.pause = function() {\r\n  if (!this.isPaused) {\r\n    this.queue.forEach(function(node) {\r\n      node.tmpPlaybackRate = node.playbackRate.value;\r\n      node.playbackRate.value = 0.0;\r\n    });\r\n    this.isPaused = true;\r\n  }\r\n};\r\n\r\n/**\r\n * Resumes all streams if they were paused.\r\n * @return {Void}\r\n */\r\nSound.prototype.resume = function() {\r\n  this.queue.forEach(function(node) {\r\n    node.playbackRate.value = node.tmpPlaybackRate;\r\n    delete node.tmpPlaybackRate;\r\n  });\r\n  this.isPaused = false;\r\n};\r\n\r\n/**\r\n * Processes an event fired by the sequencer.\r\n * @param  {Object} seqEvent A sequencer event\r\n * @return {Void}\r\n */\r\nSound.prototype.processSeqEvent = function(seqEvent) {\r\n  //this.setTone(seqEvent.props.tone);\r\n  if (seqEvent.props.duration) {\r\n    this.start(false,\r\n      seqEvent.props.delay,\r\n      seqEvent.props.duration);\r\n  } else {\r\n    this.start(false,\r\n      seqEvent.props.delay);\r\n  }\r\n};\r\n\r\n/**\r\n * Sets the startpoint of the loop\r\n * @param  {float} value  loop start in seconds\r\n * @return {Void}\r\n */\r\nSound.prototype.setLoopStart = function(value) {\r\n  this.loopStart = value;\r\n  this.queue.forEach(function(node) {\r\n    node.loopStart = value;\r\n  });\r\n};\r\n\r\n/**\r\n * Sets the endpoint of the loop\r\n * @param  {float} value  loop end in seconds\r\n * @return {Void}\r\n */\r\nSound.prototype.setLoopEnd = function(value) {\r\n  this.loopEnd = value;\r\n  this.queue.forEach(function(node) {\r\n    node.loopEnd = value;\r\n  });\r\n};\r\n\r\n/**\r\n * Releases the loop of all running nodes,\r\n * Nodes will run until end and stop.\r\n * @return {Void}\r\n */\r\nSound.prototype.releaseLoop = function() {\r\n  this.queue.forEach(function(node) {\r\n    node.loop = false;\r\n  });\r\n};\r\n\r\n/**\r\n * Resets the start and endpoint to start end endpoint of the AudioBuffer\r\n * @return {Void}\r\n */\r\nSound.prototype.resetLoop = function() {\r\n  this.loopStart = 0;\r\n  this.loopEnd = this.soundLength;\r\n};\r\n\r\n/**\r\n * Set the playback rate of the sound in percentage\r\n * (1 = 100%, 2 = 200%)\r\n * @param  {float}  value   Rate in percentage\r\n * @return {Void}\r\n */\r\nSound.prototype.setPlaybackRate = function(value) {\r\n  this.playbackRate = value;\r\n  this.queue.forEach(function(node) {\r\n    node.playbackRate.value = value;\r\n  });\r\n};\r\n\r\n/**\r\n * Get the current playback rate\r\n * @return {float}  The playback rate in percentage (1.25 = 125%)\r\n */\r\nSound.prototype.getPlaybackRate = function() {\r\n  return this.playbackRate;\r\n};\r\n\r\n/**\r\n * Set the tone within two octave (+/-12 tones)\r\n * @param  {Integer}  semi tone\r\n * @return {Void}\r\n */\r\nSound.prototype.setTone = function(semiTone) {\r\n  if (semiTone >= -12 && semiTone <= 12) {\r\n    this.detune = semiTone * 100;\r\n  } else {\r\n    throw new Error('Semi tone is ' + semiTone + '. Must be between +/-12.');\r\n  }\r\n};\r\n\r\n/**\r\n * Get the last played semitone. This doesn't has to be an\r\n * integer between -/+12 as the sound can be detuned with\r\n * more precision.\r\n * @return {float}  Semitone between -/+12\r\n */\r\nSound.prototype.getTone = function() {\r\n  return this.detune / 100;\r\n};\r\n\r\n/**\r\n * Detune the sound oscillation in cents (+/- 1200)\r\n * @param  {Integer}  value  detune in cents\r\n * @return {Void}\r\n */\r\nSound.prototype.setDetune = function(value) {\r\n  if (value >= -1200 && value <= 1200) {\r\n    this.detune = value;\r\n  } else {\r\n    throw new Error('Detune parameter is ' + value + '. Must be between +/-1200.');\r\n  }\r\n};\r\n\r\n/**\r\n * get the current detune in cents (+/- 1200)\r\n * @return {Integer}  Detune in cents\r\n */\r\nSound.prototype.getDetune = function() {\r\n  return this.detune;\r\n};\r\n\r\n/**\r\n * This is not in use and can probably be removed\r\n * @return {Int} Random number\r\n */\r\nSound.prototype.getUID = function() {\r\n  return Math.random().toString().substr(2, 8);\r\n};\r\n\r\nmodule.exports = Sound;\r\n","'use strict';\r\n\r\nvar work = require('webworkify');   //prepares the worker for browserify\r\nvar core = require('./core.js');\r\nvar worker = require('./scheduleWorker.js');\r\n\r\n/**\r\n * The main class of the sequencer. It does the queuing of\r\n * parts and events and runs the schedulers that fire events\r\n * and draws to the screen.\r\n * @example\r\n * var part = new intermix.Part();\r\n * var seq = new intermix.Sequencer();\r\n * part.addEvent(someNote, 0);\r\n * seq.addPart(part, 0);\r\n * seq.start();\r\n * @constructor\r\n */\r\nvar Sequencer = function() {\r\n\r\n  var self = this;\r\n  this.ac = core;             //currently just used for tests\r\n  this.bpm = 120;             //beats per minute\r\n  this.resolution = 64;       //shortest possible note. You normally don't want to touch this.\r\n  this.interval = 100;        //the interval in miliseconds the scheduler gets invoked.\r\n  this.lookahead = 0.3;       //time in seconds the scheduler looks ahead.\r\n                              //should be longer than interval.\r\n  this.queue = [];            //List with all parts of the score\r\n  this.runqueue = [];         //list with parts that are playing or will be played shortly\r\n\r\n  this.timePerStep;           //period of time between two steps\r\n  this.nextStepTime = 0;      //time in seconds when the next step will be triggered\r\n  this.nextStep = 0;          //position in the queue that will get triggered next\r\n  this.lastPlayedStep = 0;    //step in queue that was played (not triggered) recently (used for drawing).\r\n  this.loop = false;          //play a section of the queue in a loop\r\n  this.loopStart;             //first step of the loop\r\n  this.loopEnd;               //last step of the loop\r\n  this.isRunning = false;     //true if sequencer is running, otherwise false\r\n  this.animationFrame;        //has to be overridden with a function. Will be called in the\r\n                              //draw function with the lastPlayedStep int as parameter.\r\n\r\n  // set time per setTimePerStep\r\n  this.timePerStep = this.setTimePerStep(this.bpm, this.resolution);\r\n\r\n  // Initialize the scheduler-timer\r\n  this.scheduleWorker = work(worker);\r\n\r\n  /*eslint-enable */\r\n\r\n  this.scheduleWorker.onmessage = function(e) {\r\n    if (e.data === 'tick') {\r\n      self.scheduler();\r\n    }\r\n  };\r\n\r\n  this.scheduleWorker.postMessage({'interval': this.interval});\r\n};\r\n\r\n/**\r\n * Reads events from the master queue and fires them.\r\n * It gets called at a constant rate, looks ahead in\r\n * the queue and fires all events in the near future\r\n * with a delay computed from the current bpm value.\r\n * @private\r\n * @return {Void}\r\n */\r\nSequencer.prototype.scheduler = function() {\r\n  var limit = core.currentTime + this.lookahead;\r\n  // if invoked for the first time or previously stopped\r\n  if (this.nextStepTime === 0) {\r\n    this.nextStepTime = core.currentTime;\r\n  }\r\n\r\n  while (this.nextStepTime < limit) {\r\n    this.addPartsToRunqueue();\r\n    this.fireEvents();\r\n    this.nextStepTime += this.timePerStep;\r\n\r\n    this.setQueuePointer();\r\n  }\r\n};\r\n\r\n/**\r\n * Looks in the master queue for parts and adds\r\n * copies of them to the runqueue.\r\n * @private\r\n * @return {Void}\r\n */\r\nSequencer.prototype.addPartsToRunqueue = function() {\r\n  if (this.queue[this.nextStep]) {\r\n    if (this.queue[this.nextStep].length === 1) {\r\n      var part = this.queue[this.nextStep][0];\r\n      part.pointer = 0;\r\n      this.runqueue.push(part);\r\n    } else {\r\n      this.queue[this.nextStep].forEach(function(part) {\r\n        part.pointer = 0;\r\n        this.runqueue.push(part);\r\n      }, this);\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Deletes parts from runqueue. It is important, that the indices\r\n * of the parts are sorted from max to min. Otherwise the forEach\r\n * loop won't work.\r\n * @private\r\n * @param  {Array} indices  Indices of the parts in the runqueue\r\n * @return {Void}\r\n */\r\nSequencer.prototype.deletePartsFromRunqueue = function(indices) {\r\n  if (indices.length > 0) {\r\n    indices.forEach(function(id) {\r\n      delete this.runqueue[id].pointer;\r\n      this.runqueue.splice(id, 1);\r\n    }, this);\r\n  }\r\n};\r\n\r\n/**\r\n * Fires all events for the upcomming step.\r\n * @private\r\n * @return {Void}\r\n */\r\nSequencer.prototype.fireEvents = function() {\r\n  var markForDelete = [];\r\n  this.runqueue.forEach(function(part, index) {\r\n    if (part.pointer === part.length - 1) {\r\n      markForDelete.unshift(index);\r\n    } else {\r\n      var seqEvents = part.pattern[part.pointer];\r\n      if (seqEvents && seqEvents.length > 1) {\r\n        seqEvents.forEach(function(seqEvent) {\r\n          this.processSeqEvent(seqEvent, this.nextStepTime);\r\n        }, this);\r\n      } else if (seqEvents && seqEvents.length === 1) {\r\n        this.processSeqEvent(seqEvents[0], this.nextStepTime);\r\n      }\r\n    }\r\n    part.pointer++;\r\n  }, this);\r\n  this.deletePartsFromRunqueue(markForDelete);\r\n};\r\n\r\n/**\r\n * Invokes the appropriate subsystem to process the event\r\n * @private\r\n * @param  {Object} seqEvent  The event to process\r\n * @param  {float}  delay     time in seconds when the event should start\r\n * @return {Void}\r\n */\r\nSequencer.prototype.processSeqEvent = function(seqEvent, delay) {\r\n  if (delay) {\r\n    seqEvent.props['delay'] = delay;\r\n  }\r\n  seqEvent.props.instrument.processSeqEvent(seqEvent);\r\n};\r\n\r\n/**\r\n * Sets the pointer to the next step that should be played\r\n * in the master queue. If we're playing in loop mode,\r\n * jump back to loopstart when end of loop is reached.\r\n * @private\r\n * @param   {Int}   position  New position in the master queue\r\n * @return  {Void}\r\n */\r\nSequencer.prototype.setQueuePointer = function(position) {\r\n  if (this.loop) {\r\n    if (this.nextStep >= this.loopEnd) {\r\n      this.nextStep = this.loopStart;\r\n      this.runQueue = [];\r\n    } else {\r\n      this.nextStep++;\r\n    }\r\n  } else if (position) {\r\n    this.nextStep = position;\r\n  } else {\r\n    this.nextStep++;\r\n  }\r\n  // console.log('next step: ' + this.nextStep);\r\n};\r\n\r\n/**\r\n * Starts the sequencer\r\n * @return {Void}\r\n */\r\nSequencer.prototype.start = function() {\r\n  if (!this.isRunning) {\r\n    this.scheduleWorker.postMessage('start');\r\n    this.isRunning = true;\r\n    window.requestAnimationFrame(this.draw.bind(this));\r\n  }\r\n};\r\n\r\n/**\r\n * Stops the sequencer (halts at the current position)\r\n * @return {Void}\r\n */\r\nSequencer.prototype.stop = function() {\r\n  this.scheduleWorker.postMessage('stop');\r\n  //this.runQueue = [];\r\n  this.nextStepTime = 0;\r\n  this.isRunning = false;\r\n};\r\n\r\n/**\r\n * Scheduler that runs a drawing function every time\r\n * the screen refreshes. The function Sequencer.animationFrame()\r\n * has to be overridden by the application with stuff to be drawn on the screen.\r\n * It calls itself recursively on every frame as long as the sequencer is running.\r\n * @private\r\n * @return {Void}\r\n */\r\nSequencer.prototype.draw = function() {\r\n  // first we'll have to find out, what step was played recently.\r\n  // this is somehow clumsy because the sequencer doesn't keep track of that.\r\n  var lookAheadDelta = this.nextStepTime - core.currentTime;\r\n  if (lookAheadDelta >= 0) {\r\n    var stepsAhead = Math.round(lookAheadDelta / this.timePerStep);\r\n\r\n    if (this.nextStep < stepsAhead) {\r\n      // we just jumped to the start of a loop\r\n      this.lastPlayedStep = this.loopEnd + this.nextStep - stepsAhead;\r\n    } else {\r\n      this.lastPlayedStep = this.nextStep - stepsAhead;\r\n    }\r\n\r\n    this.updateFrame(this.lastPlayedStep);\r\n  }\r\n\r\n  if (this.isRunning) {\r\n    window.requestAnimationFrame(this.draw.bind(this));\r\n  }\r\n};\r\n\r\n/**\r\n * Runs between screen refresh. Has to be overridden by the\r\n * app to render to the screen.\r\n * @param  {Int}  lastPlayedStep  The 64th step that was played recently\r\n * @return {Void}\r\n */\r\nSequencer.prototype.updateFrame = function(lastPlayedStep) {\r\n  console.log(lastPlayedStep);\r\n};\r\n\r\n/**\r\n * Adds a part to the master queue.\r\n * @param  {Object} part      An instance of Part\r\n * @param  {Int}    position  Position in the master queue\r\n * @return {Void}\r\n */\r\nSequencer.prototype.addPart = function(part, position) {\r\n  if (part.length && part.pattern) {\r\n    if (!this.queue[position]) {\r\n      this.queue[position] = [];\r\n    }\r\n    this.queue[position].push(part);\r\n  } else {\r\n    throw new Error('Given parameter doesn\\'t seem to be a part object');\r\n  }\r\n};\r\n\r\n/**\r\n * Removes a part object from the master queue\r\n * @param  {Object} part     Part instance to be removed\r\n * @param  {Int}    position Position in the master queue\r\n * @return {Void}\r\n */\r\nSequencer.prototype.removePart = function(part, position) {\r\n  if (this.queue[position] instanceof Array &&\r\n    this.queue[position].length > 0) {\r\n    var index = this.queue[position].indexOf(part);\r\n    this.queue[position].splice(index, 1);\r\n  } else {\r\n    throw new Error('Part not found at position ' + position + '.');\r\n  }\r\n};\r\n\r\n/**\r\n * Set beats per minute\r\n * @param  {Int}   bpm beats per minute\r\n * @return {Void}\r\n */\r\nSequencer.prototype.setBpm = function(bpm) {\r\n  this.bpm = bpm;\r\n  this.timePerStep = this.setTimePerStep(bpm, this.resolution);\r\n};\r\n\r\n/**\r\n * Computes the time in seconds as float value\r\n * between one shortest posssible note\r\n * (64th by default) and the next.\r\n * @private\r\n * @param  {float}  bpm        beats per minute\r\n * @param  {Int}    resolution shortest possible note value\r\n * @return {float}             time in seconds\r\n */\r\nSequencer.prototype.setTimePerStep = function(bpm, resolution) {\r\n  return (60 * 4) / (bpm * resolution);\r\n};\r\n\r\nSequencer.prototype.getLastPlayedStep = function() {\r\n\r\n};\r\n\r\n/**\r\n * Makes a copy of a flat array.\r\n * Uses a pre-allocated while-loop\r\n * which seems to be the fasted way\r\n * (by far) of doing this:\r\n * http://jsperf.com/new-array-vs-splice-vs-slice/113\r\n * @private\r\n * @param  {Array} sourceArray Array that should be copied.\r\n * @return {Array}             Copy of the source array.\r\n */\r\nSequencer.prototype.copyArray = function(sourceArray) {\r\n  var destArray = new Array(sourceArray.length);\r\n  var i = sourceArray.length;\r\n  while (i--) {\r\n    destArray[i] = sourceArray[i];\r\n  }\r\n  return destArray;\r\n};\r\n\r\nmodule.exports = Sequencer;\r\n","'use strict';\r\n\r\nvar core = require('./core.js');\r\n\r\n/**\r\n * <p>\r\n * Creates a wrapper in which an audio buffer lives.\r\n * A SoundWave object just holds audio data and does nothing else.\r\n * If you want to play the sound, you have to additionally create a\r\n * <a href=\"Sound.html\">Sound</a> object.\r\n * It can handle one or more ArrayBuffers or filenames\r\n * (*.wav, *.mp3) as data sources.\r\n * </p><p>\r\n * Multiple sources will be concatenated into one audio buffer.\r\n * This is not the same as creating multiple SoundWave objects.\r\n * It's like a wavetable: All start/end positions will be saved so\r\n * you can trigger the original samples without using multiple buffers.\r\n * Possible usages are multisampled sounds, loops or wavesequences (kind of).\r\n * </p>\r\n *\r\n * @example <caption>Play a sound from an audio file:</caption>\r\n * var soundWave = new intermix.SoundWave('file.wav');\r\n * var sound = new intermix.Sound(soundWave);\r\n * sound.play;\r\n * @example <caption>Concatenate multiple source files into one buffer<br>\r\n * in the given order and play them (This is broken in v0.1. Don't use it!):</caption>\r\n * var soundWave = new intermix.SoundWave('file1.wav,file2.wav,file3.wav');\r\n * var sound = new intermix.Sound(soundWave);\r\n * sound.play;\r\n * @example <caption>\r\n * Using ArrayBuffers instead of filenames will come in handy if you want<br>\r\n * to have full control over XHR or use a preloader (here: preload.js):\r\n * </caption>\r\n * var queue = new createjs.LoadQueue();\r\n * queue.on('complete', handleComplete);\r\n * queue.loadManifest([\r\n *     {id: 'src1', src:'file1.wav', type:createjs.AbstractLoader.BINARY},\r\n *     {id: 'src2', src:'file2.wav', type:createjs.AbstractLoader.BINARY}\r\n * ]);\r\n *\r\n * function handleComplete() {\r\n *     var binData1 = queue.getResult('src1');\r\n *     var binData2 = queue.getResult('src2');\r\n *     var wave1 = new intermix.SoundWave(binData1);\r\n *     var wave2 = new intermix.SoundWave(binData2);\r\n *     var concatWave = new intermix.SoundWave([binData1, binData2]);\r\n * };\r\n * @constructor\r\n * @param  {(Object|Object[]|string)} audioSrc   One or more ArrayBuffers or filenames\r\n */\r\nvar SoundWave = function(audioSrc) {\r\n\r\n  this.ac = core;       //currently just used for tests\r\n  this.buffer = null;   //AudioBuffer\r\n  this.metaData = [];   //start-/endpoints and length of single waves\r\n  var self = this;\r\n\r\n  if (audioSrc) {\r\n    if (audioSrc instanceof ArrayBuffer) {\r\n      //one audio buffer to decode\r\n      this.decodeAudioData(audioSrc);\r\n    } else if (audioSrc instanceof Array && audioSrc[0] instanceof ArrayBuffer) {\r\n      //multiple audio buffers to decode and concatenate\r\n      this.concatBinariesToAudioBuffer(audioSrc);\r\n    } else if (typeof audioSrc === 'string' && audioSrc.indexOf(',') === -1) {\r\n      //one file to load/decode\r\n      this.loadFile(audioSrc, function(response) {\r\n        self.buffer = self.decodeAudioData(response);\r\n      });\r\n    } else if (typeof audioSrc === 'string' && audioSrc.indexOf(',') > -1) {\r\n      //multiple files to load/decode and cancatinate\r\n      var binBuffers = this.loadFiles(audioSrc);\r\n      this.buffer = this.concatBinariesToAudioBuffer(binBuffers, this.buffer);\r\n    } else {\r\n      throw new Error('Cannot create SoundWave object: Unsupported data format');\r\n    }\r\n  } else {\r\n    //start the object with empty buffer. Usefull for testing and advanced usage.\r\n  }\r\n\r\n};\r\n\r\n/**\r\n * Takes binary audio data, turns it into an audio buffer object and\r\n * stores it in this.buffer.\r\n * Basically a wrapper for the web-audio-api decodeAudioData function.\r\n * It uses the new promise syntax so it probably won't work in all browsers by now.\r\n * @private\r\n * @param  {ArrayBuffer}  rawAudioSrc Audio data in raw binary format\r\n * @return {Promise}                  Promise that indicates if operation was successfull.\r\n */\r\nSoundWave.prototype.decodeAudioData = function(rawAudioSrc) {\r\n  var self = this;\r\n  return core.decodeAudioData(rawAudioSrc).then(function(decoded) {\r\n    self.buffer = decoded;\r\n  });\r\n};\r\n\r\n/**\r\n * Concatenates one or more ArrayBuffers to an AudioBuffer.\r\n * @private\r\n * @param  {Array} binaryBuffers  Array holding one or more ArrayBuffers\r\n * @param  {AudioBuffer} audioBuffer   An existing AudioBuffer object\r\n * @return {AudioBuffer}               The concatenated AudioBuffer\r\n */\r\nSoundWave.prototype.concatBinariesToAudioBuffer = function(binaryBuffers, audioBuffer) {\r\n  binaryBuffers.forEach(function(binBuffer) {\r\n    var tmpAudioBuffer = this.decodeAudioData(binBuffer);\r\n    this.metaData.push(this.addWaveMetaData(audioBuffer, tmpAudioBuffer));\r\n    audioBuffer = this.appendAudioBuffer(audioBuffer, tmpAudioBuffer);\r\n  }, this);\r\n\r\n  return audioBuffer;\r\n};\r\n\r\n/**\r\n * Appends two audio buffers. Suggested by Chris Wilson:<br>\r\n * http://stackoverflow.com/questions/14143652/web-audio-api-append-concatenate-different-audiobuffers-and-play-them-as-one-son\r\n * @private\r\n * @param  {AudioBuffer} buffer1 The first audio buffer\r\n * @param  {AudioBuffer} buffer2 The second audio buffer\r\n * @return {AudioBuffer}         buffer1 + buffer2\r\n */\r\nSoundWave.prototype.appendAudioBuffer = function(buffer1, buffer2) {\r\n  var numberOfChannels = Math.min(buffer1.numberOfChannels, buffer2.numberOfChannels);\r\n  var tmp = core.createBuffer(numberOfChannels,\r\n    (buffer1.length + buffer2.length),\r\n    buffer1.sampleRate);\r\n  for (var i = 0; i < numberOfChannels; i++) {\r\n    var channel = tmp.getChannelData(i);\r\n    channel.set( buffer1.getChannelData(i), 0);\r\n    channel.set( buffer2.getChannelData(i), buffer1.length);\r\n  }\r\n  return tmp;\r\n};\r\n\r\n/**\r\n * Creates a dictionary with start/stop points and length in sample-frames\r\n * of an appended waveform and adds it to the metaData array.\r\n * @private\r\n * @param  {AudioBuffer} existingBuffer The 'old' buffer that gets appended\r\n * @param  {AudioBuffer} newBuffer      The buffer that gets appended\r\n * @return {Object}                     Dictionary with start/stop/length data\r\n */\r\nSoundWave.prototype.addWaveMetaData = function(existingBuffer, newBuffer) {\r\n  return {\r\n    start: existingBuffer.length + 1,\r\n    end: existingBuffer.length + newBuffer.length,\r\n    length: newBuffer.length\r\n  };\r\n};\r\n\r\n/**\r\n * Loads a binary file and calls a function with the\r\n * returned ArrayBuffer as its argument when done.\r\n * @todo    Test in synchronous mode or remove it completely\r\n * @param  {string}   filename       The file to be loaded\r\n * @param  {function} onloadCallback The function to be called\r\n * @param  {boolean}  [async=true]   Asynchronous loading\r\n * @example\r\n * var arrayBuffer;\r\n * this.loadFile('file1.wav', function(response) {\r\n *   arrayBuffer = response;\r\n * });\r\n */\r\nSoundWave.prototype.loadFile = function(filename, onloadCallback, async) {\r\n  var self = this;\r\n  var asynchronously = true;\r\n  var request = new window.XMLHttpRequest();\r\n\r\n  request.addEventListener('progress', self.updateProgress);\r\n  request.addEventListener('load', self.transferComplete);\r\n  request.addEventListener('error', self.transferFailed);\r\n  request.addEventListener('abort', self.transferCanceled);\r\n\r\n  if (async) {\r\n    asynchronously = async;\r\n  }\r\n\r\n  request.open('GET', filename, asynchronously);\r\n  request.responseType = 'arraybuffer';\r\n\r\n  request.onload = function() {\r\n    onloadCallback(request.response);\r\n  };\r\n\r\n  request.send();\r\n};\r\n\r\nSoundWave.prototype.updateProgress = function() {};\r\n\r\nSoundWave.prototype.transferComplete = function() {\r\n\r\n};\r\n\r\nSoundWave.prototype.transferFailed = function() {};\r\n\r\nSoundWave.prototype.transferCanceled = function() {};\r\n\r\n/**\r\n * Loads multiple binary files and returns an array\r\n * with the data from the files in the given order.\r\n * @param  {Array}  filenames List with filenames\r\n * @return {Array}            Array of ArrayBuffers\r\n */\r\nSoundWave.prototype.loadFiles = function(filenames) {\r\n  var self = this;\r\n  var binBuffers = [];\r\n  var names = filenames.split(',');\r\n  names.forEach(function(name) {\r\n    self.loadFile(name, function(response) {\r\n      binBuffers[name] = response;\r\n    });\r\n  });\r\n\r\n  return this.sortBinBuffers(names, binBuffers);\r\n};\r\n\r\n/**\r\n * Sort ArrayBuffers the same order, like the filename\r\n * parameters.\r\n * @private\r\n * @param  {Array}  filenames  Array with filenames\r\n * @param  {Array}  binBuffers Array with ArrayBuffer\r\n * @return {Array}             Array with sorted ArrayBuffers\r\n */\r\nSoundWave.prototype.sortBinBuffers = function(filenames, binBuffers) {\r\n  return filenames.map(function(el) {\r\n    return binBuffers[el];\r\n  });\r\n};\r\n\r\nmodule.exports = SoundWave;\r\n","'use strict';\r\n\r\n/**\r\n * Represents a part of a sequence. It can be\r\n * used in many ways:\r\n * <ul>\r\n * <li>A part of a track like in piano-roll sequencers</li>\r\n * <li>A pattern like in step sequencers, drum computers and trackers</li>\r\n * <li>A loop like in live sequencers</li>\r\n * </ul>\r\n * Technically it can store any type of event your system is capable of.\r\n * This means it is not limited to audio, midi, osc or dmx but can hold\r\n * any type of javascript object. A possible usecase would be to trigger\r\n * screen events with the draw function of the sequencer object.\r\n * @example\r\n * var sound = new intermix.Sound(soundWaveObject);\r\n * var seq = new intermix.Sequencer();\r\n * var part = new intermix.Part();\r\n * var note = intermix.events.createAudioNote('a3', 1, 0, sound);\r\n * part.addEvent(note, 0);\r\n * part.addEvent(note, 4);\r\n * seq.addPart(part, 0);\r\n * @constructor\r\n * @param  {float}  length       Length of the part in 64th notes (default: 64)\r\n */\r\nvar Part = function(length) {\r\n\r\n  this.resolution = 16; // (resolution * multiply) should alwasy be 64\r\n  this.multiply = 4;    // resolution multiplier\r\n  this.length = 64;     // length of the pattern in 64th notes\r\n  this.name = 'Part';   // name of this part\r\n  this.pattern = [];    // the actual pattern with notes etc.\r\n\r\n  if (length) {\r\n    this.length = length;\r\n  }\r\n\r\n  this.pattern = this.initPattern(this.length);\r\n};\r\n\r\n/**\r\n * Initialize an empty pattern for the part.\r\n * @private\r\n * @param  {float}  length  Length of the pattern mesured in bars (4 beats = 1 bar)\r\n * @return {Object} The current context to make the function chainable.\r\n */\r\nPart.prototype.initPattern = function(length) {\r\n  var pattern = [];\r\n  for (var i = 0; i < (length); i++) {\r\n    pattern[i] = [];\r\n  }\r\n  return pattern;\r\n};\r\n\r\n/**\r\n * Adds an event to the pattern at a given position\r\n * @param  {Object} seqEvent  The event (note, controller, whatever)\r\n * @param  {Int}    position  Position in the pattern\r\n * @return {Object} The current context to make the function chainable.\r\n */\r\nPart.prototype.addEvent = function(seqEvent, position) {\r\n  if (position <= this.resolution) {\r\n    var pos = (position) * this.multiply;\r\n    this.pattern[pos].push(seqEvent);\r\n  } else {\r\n    throw new Error('Position out of pattern bounds.');\r\n  }\r\n  return this;\r\n};\r\n\r\n/**\r\n * Removes an event at a given position\r\n * @param  {Object} seqEvent  The event (note, controller, whatever)\r\n * @param  {Int}    position  Position in the pattern\r\n * @return {Void}\r\n */\r\nPart.prototype.removeEvent = function(seqEvent, position) {\r\n  var pos = (position) * this.multiply;\r\n  var index = this.pattern[pos].indexOf(seqEvent);\r\n  this.pattern[pos].splice(index, 1);\r\n};\r\n\r\n/**\r\n * Get the length of the pattern in 64th notes\r\n * @return {Int}    Length of the pattern\r\n */\r\nPart.prototype.getLength = function() {\r\n  return this.pattern.length;\r\n};\r\n\r\n/**\r\n * Get all positions that contain at least one event.\r\n * Can be handy to draw events on the screen.\r\n * @example <caption>from {@tutorial Stepsequencer}</caption>\r\n * bdSteps = bdPart.getNotePositions();\r\n * bdSteps.forEach(function(pos) {\r\n *   document.getElementById('bd' + pos).style.backgroundColor = 'red';\r\n * });\r\n * @return {Array}  List with all non-empty pattern entries\r\n */\r\nPart.prototype.getNotePositions = function() {\r\n  var positions = [];\r\n  this.pattern.forEach(function(el, index) {\r\n    if (el.length > 0) {\r\n      positions.push(index / this.multiply);\r\n    }\r\n  }, this);\r\n  return positions;\r\n};\r\n\r\n/**\r\n * Extends a part at the top/start.\r\n * @param  {float}  extLength Length in 64th notes\r\n * @return {Void}\r\n */\r\nPart.prototype.extendOnTop = function(extLength) {\r\n  var extension = this.initPattern(extLength);\r\n  this.pattern = extension.concat(this.pattern);\r\n};\r\n\r\n/**\r\n * Extends a part at the end\r\n * @param  {float}  extLength Length in 64th notes\r\n * @return {Void}\r\n */\r\nPart.prototype.extendOnEnd = function(extLength) {\r\n  var extension = this.initPattern(extLength);\r\n  this.pattern = this.pattern.concat(extension);\r\n};\r\n\r\nmodule.exports = Part;\r\n","/**\r\n * This is a webworker that provides a timer\r\n * that fires the scheduler for the sequencer.\r\n * This is because timing here is  more stable\r\n * than in the main thread.\r\n * The syntax is adapted to the commonjs module pattern.\r\n * @example <caption>It is just for library internal\r\n * usage. See Sequencer.js for details.</caption>\r\n * worker.postMessage({ 'interval': 200 });\r\n * worker.postMessage('start');\r\n * worker.postMessage('stop');\r\n * worker.terminate();  //webworker internal function, just for completeness\r\n */\r\n'use strict';\r\n\r\nvar timer = null;\r\nvar interval = 100;\r\n\r\nvar worker = function(self) {\r\n  self.addEventListener('message', function(e) {\r\n    if (e.data === 'start') {\r\n      timer = setInterval(function() {self.postMessage('tick');}, interval);\r\n    } else if (e.data === 'stop') {\r\n      clearInterval(timer);\r\n    } else if (e.data.interval) {\r\n      interval = e.data.interval;\r\n      if (timer) {\r\n        clearInterval(timer);\r\n        timer = setInterval(function() {self.postMessage('tick');}, interval);\r\n      }\r\n    }\r\n  });\r\n};\r\n\r\nmodule.exports = worker;\r\n","var bundleFn = arguments[3];\nvar sources = arguments[4];\nvar cache = arguments[5];\n\nvar stringify = JSON.stringify;\n\nmodule.exports = function (fn) {\n    var keys = [];\n    var wkey;\n    var cacheKeys = Object.keys(cache);\n\n    for (var i = 0, l = cacheKeys.length; i < l; i++) {\n        var key = cacheKeys[i];\n        var exp = cache[key].exports;\n        // Using babel as a transpiler to use esmodule, the export will always\n        // be an object with the default export as a property of it. To ensure\n        // the existing api and babel esmodule exports are both supported we\n        // check for both\n        if (exp === fn || exp.default === fn) {\n            wkey = key;\n            break;\n        }\n    }\n\n    if (!wkey) {\n        wkey = Math.floor(Math.pow(16, 8) * Math.random()).toString(16);\n        var wcache = {};\n        for (var i = 0, l = cacheKeys.length; i < l; i++) {\n            var key = cacheKeys[i];\n            wcache[key] = key;\n        }\n        sources[wkey] = [\n            Function(['require','module','exports'], '(' + fn + ')(self)'),\n            wcache\n        ];\n    }\n    var skey = Math.floor(Math.pow(16, 8) * Math.random()).toString(16);\n\n    var scache = {}; scache[wkey] = wkey;\n    sources[skey] = [\n        Function(['require'], (\n            // try to call default if defined to also support babel esmodule\n            // exports\n            'var f = require(' + stringify(wkey) + ');' +\n            '(f.default ? f.default : f)(self);'\n        )),\n        scache\n    ];\n\n    var src = '(' + bundleFn + ')({'\n        + Object.keys(sources).map(function (key) {\n            return stringify(key) + ':['\n                + sources[key][0]\n                + ',' + stringify(sources[key][1]) + ']'\n            ;\n        }).join(',')\n        + '},{},[' + stringify(skey) + '])'\n    ;\n\n    var URL = window.URL || window.webkitURL || window.mozURL || window.msURL;\n\n    return new Worker(URL.createObjectURL(\n        new Blob([src], { type: 'text/javascript' })\n    ));\n};\n"]}