{"version":3,"sources":["d:/Users/jansen/git/intermix.js/node_modules/browser-pack/_prelude.js","src/main.js","d:/Users/jansen/git/intermix.js/src/core.js","d:/Users/jansen/git/intermix.js/src/Sound.js","d:/Users/jansen/git/intermix.js/src/SoundWave.js"],"names":["Intermix","require","SoundWave","Sound","module","exports","audioCtx","window","AudioContext","webkitAudioContext","soundBuffer","this","buffer","bufferSource","loop","isPaused","gainNode","pannerNode","startOffset","startTime","Error","setupAudioChain","prototype","createGain","createStereoPanner","connect","destination","gain","value","console","log","createBufferSource","self","onended","destroyBufferSource","disconnect","play","duration","currentTime","start","stop","paused","pause","binaryData","collection","decodeAudioData","then","decoded"],"mappings":"AAAA;ACAA,YAGA,IAAIA,UAAWC,QAAQ,gBACvBD,UAASE,UAAYD,QAAQ,kBAC7BD,SAASG,MAAQF,QAAQ,cAEzBG,OAAOC,QAAUL;;AEPjB,YAEA,IAAIG,OAAQ,SAASG,EAAUI,GAa7B,GAXAC,KAAKL,SAAW,KAChBK,KAAKC,OAAS,KACdD,KAAKE,aAAe,KACpBF,KAAKG,MAAO,EACZH,KAAKI,UAAW,EAChBJ,KAAKK,SAAW,KAChBL,KAAKM,WAAa,KAElBN,KAAKO,YAAc,EACnBP,KAAKQ,UAAY,GAEbT,IAAeJ,EAKjB,KAAM,IAAIc,OAAM,sDAJhBT,MAAKL,SAAWA,EAChBK,KAAKC,OAASF,EACdC,KAAKU,kBAMTlB,OAAMmB,UAAUD,gBAAkB,WAChCV,KAAKK,SAAWL,KAAKL,SAASiB,aAC9BZ,KAAKM,WAAaN,KAAKL,SAASkB,qBAChCb,KAAKK,SAASS,QAAQd,KAAKM,YAC3BN,KAAKM,WAAWQ,QAAQd,KAAKL,SAASoB,aACtCf,KAAKK,SAASW,KAAKC,MAAQ,EAC3BC,QAAQC,IAAI,qBAGd3B,MAAMmB,UAAUS,mBAAqB,WACnC,GAAIC,GAAOrB,IACXA,MAAKE,aAAeF,KAAKL,SAASyB,qBAClCpB,KAAKE,aAAaD,OAASD,KAAKC,OAChCD,KAAKE,aAAaY,QAAQd,KAAKK,UAC/BL,KAAKE,aAAaoB,QAAU,WAC1BD,EAAKE,sBACLL,QAAQC,IAAI,mBAIhB3B,MAAMmB,UAAUY,oBAAsB,WACV,OAAtBvB,KAAKE,eACPF,KAAKE,aAAasB,aAClBxB,KAAKE,aAAe,KACpBgB,QAAQC,IAAI,gCAIhB3B,MAAMmB,UAAUc,KAAO,SAAStB,GACV,mBAATA,KACTH,KAAKG,KAAOA,GAEdH,KAAKoB,qBACLpB,KAAKE,aAAaC,KAAOH,KAAKG,MAEL,IAArBH,KAAKO,aAAqBP,KAAKO,aAAeP,KAAKC,OAAOyB,YAC5DR,QAAQC,IAAI,uBACZnB,KAAKQ,UAAYR,KAAKL,SAASgC,aAGjC3B,KAAKE,aAAa0B,MAAM5B,KAAKQ,UAAWR,KAAKO,aAC7CP,KAAKO,YAAc,GAGrBf,MAAMmB,UAAUkB,KAAO,SAASC,GAC1BA,IACF9B,KAAKO,YAAcP,KAAKL,SAASgC,YAAc3B,KAAKQ,UACpDR,KAAK8B,QAAS,GAEU,OAAtB9B,KAAKE,cACPF,KAAKE,aAAa2B,QAMtBrC,MAAMmB,UAAUoB,MAAQ,WACtB/B,KAAKI,UAAW,EAChBJ,KAAK6B,KAAK7B,KAAKI,WAGjBX,OAAOC,QAAUF;;ACrFjB,YAEA,IAAID,WAAY,SAASI,EAAUqC,EAAYC,GAE7CjC,KAAKL,SAAW,KAChBK,KAAKC,OAAS,KAGVN,EACFK,KAAKL,SAAWA,EAEhBuB,QAAQC,IAAI,wBAGd,IAAIE,GAAOrB,IAEPgC,IACFhC,KAAKL,SAASuC,gBAAgBF,GAAYG,KAAK,SAASC,GACtDf,EAAKpB,OAASmC,EACdlB,QAAQC,IAAI,oBAYlB1B,QAAOC,QAAUH;;AFvBjB,YAEA,IAAII,UAAW,MAEf,WAEEC,OAAOC,aAAeD,OAAOC,cAAgBD,OAAOE,mBAEhDF,OAAOC,eACTF,SAAW,GAAIC,QAAOC,iBAO1BJ,OAAOC,SACLC,SAAUA","file":"bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","'use strict';\r\n\r\n//Intermix = require('./core.js');\r\nvar Intermix = require('./core.js') || {};\r\nIntermix.SoundWave = require('./SoundWave.js');\r\nIntermix.Sound = require('./Sound.js');\r\n\r\nmodule.exports = Intermix;\r\n","/**\r\n * This simply creates the audio context objects\r\n * and exports it.\r\n *\r\n * TODO: - Should we do backwards-compatibility for older api-versions?\r\n *       - Check for mobile/iOS compatibility.\r\n *       - Check if we're running on node (and throw an error if so)\r\n */\r\n'use strict';\r\n\r\nvar audioCtx = null;\r\n\r\n(function() {\r\n\r\n  window.AudioContext = window.AudioContext || window.webkitAudioContext;\r\n\r\n  if (window.AudioContext) {\r\n    audioCtx = new window.AudioContext();\r\n  } else {\r\n    //TODO: throw error, probably surround with try/catch\r\n  }\r\n\r\n})();\r\n\r\nmodule.exports = {\r\n  audioCtx: audioCtx\r\n};\r\n","'use strict';\r\n\r\nvar Sound = function(audioCtx, soundBuffer) {\r\n\r\n  this.audioCtx = null;\r\n  this.buffer = null;\r\n  this.bufferSource = null;\r\n  this.loop = false;\r\n  this.isPaused = false;\r\n  this.gainNode = null;\r\n  this.pannerNode = null;\r\n\r\n  this.startOffset = 0;\r\n  this.startTime = 0;\r\n\r\n  if (soundBuffer && audioCtx) {\r\n    this.audioCtx = audioCtx;\r\n    this.buffer = soundBuffer;\r\n    this.setupAudioChain();\r\n  } else {\r\n    throw new Error('Error initialising Sound object: parameter missing.');\r\n  }\r\n};\r\n\r\nSound.prototype.setupAudioChain = function() {\r\n  this.gainNode = this.audioCtx.createGain();\r\n  this.pannerNode = this.audioCtx.createStereoPanner();\r\n  this.gainNode.connect(this.pannerNode);\r\n  this.pannerNode.connect(this.audioCtx.destination);\r\n  this.gainNode.gain.value = 1;\r\n  console.log('audiochain ready');\r\n};\r\n\r\nSound.prototype.createBufferSource = function() {\r\n  var self = this;\r\n  this.bufferSource = this.audioCtx.createBufferSource();\r\n  this.bufferSource.buffer = this.buffer;\r\n  this.bufferSource.connect(this.gainNode);\r\n  this.bufferSource.onended = function() {\r\n    self.destroyBufferSource();\r\n    console.log('onended fired');\r\n  };\r\n};\r\n\r\nSound.prototype.destroyBufferSource = function() {\r\n  if (this.bufferSource !== null) {\r\n    this.bufferSource.disconnect();\r\n    this.bufferSource = null;\r\n    console.log('BufferSourceNode destroyed');\r\n  }\r\n};\r\n\r\nSound.prototype.play = function(loop) {\r\n  if (typeof loop !== 'undefined') {\r\n    this.loop = loop;\r\n  }\r\n  this.createBufferSource();\r\n  this.bufferSource.loop = this.loop;\r\n\r\n  if (this.startOffset === 0 || this.startOffset >= this.buffer.duration) {\r\n    console.log('resetting starttime');\r\n    this.startTime = this.audioCtx.currentTime;\r\n  }\r\n\r\n  this.bufferSource.start(this.startTime, this.startOffset);\r\n  this.startOffset = 0;\r\n};\r\n\r\nSound.prototype.stop = function(paused) {\r\n  if (paused) {\r\n    this.startOffset = this.audioCtx.currentTime - this.startTime;\r\n    this.paused = false;\r\n  }\r\n  if (this.bufferSource !== null) {\r\n    this.bufferSource.stop();\r\n  } else {\r\n    //fail silently\r\n  }\r\n};\r\n\r\nSound.prototype.pause = function() {\r\n  this.isPaused = true;\r\n  this.stop(this.isPaused);\r\n};\r\n\r\nmodule.exports = Sound;\r\n","'use strict';\r\n\r\nvar SoundWave = function(audioCtx, binaryData, collection) {\r\n\r\n  this.audioCtx = null;\r\n  this.buffer = null;\r\n\r\n\r\n  if (audioCtx) {\r\n    this.audioCtx = audioCtx;\r\n  } else {\r\n    console.log('No AudioContext found');\r\n  }\r\n\r\n  var self = this;\r\n\r\n  if (binaryData) {\r\n    this.audioCtx.decodeAudioData(binaryData).then(function(decoded) {\r\n      self.buffer = decoded;\r\n      console.log('buffer created');\r\n    });\r\n  } else {\r\n    //TODO: throw error\r\n  }\r\n\r\n  if (collection) {\r\n    //TODO: put buffer into soundbank\r\n  }\r\n\r\n};\r\n\r\nmodule.exports = SoundWave;\r\n"]}