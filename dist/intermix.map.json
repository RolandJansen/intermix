{"version":3,"sources":["d:/Users/jansen/git/intermix.js/node_modules/browser-pack/_prelude.js","src/main.js","d:/Users/jansen/git/intermix.js/src/Sound.js","d:/Users/jansen/git/intermix.js/src/SoundWave.js","d:/Users/jansen/git/intermix.js/src/core.js"],"names":["Intermix","SoundWave","require","Sound","window","AudioContext","webkitAudioContext","AC","module","exports","im","soundWave","this","buffer","bufferSource","loop","gainNode","createGain","pannerNode","createStereoPanner","setupAudioChain","prototype","connect","output","createBufferSource","onended","destroyBufferSource","disconnect","console","log","resetBufferSource","play","start","stop","binaryData","collection","audioCtx","self","decodeAudioData","decoded"],"mappings":"AAAA;ACAA,YAGA,IAAIA,YACJA,UAASC,UAAYC,QAAQ,kBAC7BF,SAASG,MAAQD,QAAQ,cAEzB,WACEE,OAAOC,aAAeD,OAAOC,cAAgBD,OAAOE,mBAEhDF,OAAOC,eACTD,OAAOG,GAAK,GAAIH,QAAOC,iBAM3BG,OAAOC,QAAUT;;ACjBjB,YAEA,IAAIU,IAAKR,QAAQ,YAEjBQ,IAAGP,MAAQ,SAASQ,GAElBC,KAAKC,OAAS,KACdD,KAAKE,aAAe,KACpBF,KAAKG,MAAO,EACZH,KAAKI,SAAWN,GAAGO,aACnBL,KAAKM,WAAaR,GAAGS,qBAEjBR,IACFC,KAAKC,OAASF,EACdC,KAAKQ,oBAMTV,GAAGP,MAAMkB,UAAUD,gBAAkB,WACnCR,KAAKI,SAASM,QAAQV,KAAKM,YAC3BN,KAAKM,WAAWI,QAAQZ,GAAGa,SAG7Bb,GAAGP,MAAMkB,UAAUG,mBAAqB,WACtCZ,KAAKE,aAAeJ,GAAGc,qBACvBZ,KAAKE,aAAaD,OAASD,KAAKC,OAChCD,KAAKE,aAAaW,QAAUb,KAAKc,qBAGnChB,GAAGP,MAAMkB,UAAUK,oBAAsB,WACb,OAAtBd,KAAKE,eACPF,KAAKE,aAAaa,aAClBf,KAAKE,aAAe,MAEtBc,QAAQC,IAAI,+BAGdnB,GAAGP,MAAMkB,UAAUS,kBAAoB,WACrClB,KAAKc,sBACLd,KAAKY,sBAGPd,GAAGP,MAAMkB,UAAUU,KAAO,SAAShB,GAC7BA,IACFH,KAAKG,KAAOA,GAEdH,KAAKY,qBACLZ,KAAKE,aAAaC,KAAOH,KAAKG,KAC9BH,KAAKE,aAAaQ,QAAQV,KAAKI,UAC/BJ,KAAKE,aAAakB,QAClBJ,QAAQC,IAAI,6BAA+Bd,IAG7CL,GAAGP,MAAMkB,UAAUY,KAAO,WACE,OAAtBrB,KAAKE,cACPF,KAAKE,aAAamB;;ACzDtB,YAEA,IAAIhC,WAAY,SAASiC,EAAYC,GAEnCvB,KAAKwB,SAAW,KAChBxB,KAAKC,OAAS,KAGVT,OAAOC,aACTO,KAAKwB,SAAWhC,OAAOC,aAGvBuB,QAAQC,IAAI,yBAGdD,QAAQC,IAAIzB,OAAOC,aAEnB,IAAIgC,GAAOzB,IAEPsB,IACFtB,KAAKwB,SAASE,gBAAgBJ,EAAY,SAASK,GACjDF,EAAKxB,OAAS0B,IAYpB/B,QAAOC,QAAUR;;ACxBjB,YAEA,IAAID,UAAW,WAIbI,OAAOC,aAAeD,OAAOC,cAAgBD,OAAOE,mBACpDM,KAAKwB,SAAW,KAChBxB,KAAKW,OAAS,KAEVnB,OAAOC,aAkBbG,QAAOC,QAAUT","file":"bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","'use strict';\r\n\r\n//Intermix = require('./core.js');\r\nvar Intermix = {};\r\nIntermix.SoundWave = require('./SoundWave.js');\r\nIntermix.Sound = require('./Sound.js');\r\n\r\n(function() {\r\n  window.AudioContext = window.AudioContext || window.webkitAudioContext;\r\n\r\n  if (window.AudioContext) {\r\n    window.AC = new window.AudioContext();\r\n  } else {\r\n    //error or sth.\r\n  }\r\n})();\r\n\r\nmodule.exports = Intermix;\r\n","'use strict';\r\n\r\nvar im = require('./core.js');\r\n\r\nim.Sound = function(soundWave) {\r\n\r\n  this.buffer = null;\r\n  this.bufferSource = null;\r\n  this.loop = false;\r\n  this.gainNode = im.createGain();\r\n  this.pannerNode = im.createStereoPanner();\r\n\r\n  if (soundWave) {\r\n    this.buffer = soundWave;\r\n    this.setupAudioChain();\r\n  } else {\r\n    //TODO: throw error\r\n  }\r\n};\r\n\r\nim.Sound.prototype.setupAudioChain = function() {\r\n  this.gainNode.connect(this.pannerNode);\r\n  this.pannerNode.connect(im.output);\r\n};\r\n\r\nim.Sound.prototype.createBufferSource = function() {\r\n  this.bufferSource = im.createBufferSource();\r\n  this.bufferSource.buffer = this.buffer;\r\n  this.bufferSource.onended = this.destroyBufferSource;\r\n};\r\n\r\nim.Sound.prototype.destroyBufferSource = function() {\r\n  if (this.bufferSource !== null) {\r\n    this.bufferSource.disconnect();\r\n    this.bufferSource = null;\r\n  }\r\n  console.log('BufferSourceNode destroyed');\r\n};\r\n\r\nim.Sound.prototype.resetBufferSource = function() {\r\n  this.destroyBufferSource();\r\n  this.createBufferSource();\r\n};\r\n\r\nim.Sound.prototype.play = function(loop) {\r\n  if (loop) {\r\n    this.loop = loop;\r\n  }\r\n  this.createBufferSource();\r\n  this.bufferSource.loop = this.loop;\r\n  this.bufferSource.connect(this.gainNode);\r\n  this.bufferSource.start();\r\n  console.log('Sound started with loop = ' + loop);\r\n};\r\n\r\nim.Sound.prototype.stop = function() {\r\n  if (this.bufferSource !== null) {\r\n    this.bufferSource.stop();\r\n    //we should probably have to destroy the buffersource here,\r\n    //if the sound is in loop mode.\r\n  } else {\r\n    //fail silently\r\n  }\r\n};\r\n","'use strict';\r\n\r\nvar SoundWave = function(binaryData, collection) {\r\n\r\n  this.audioCtx = null;\r\n  this.buffer = null;\r\n\r\n\r\n  if (window.AudioContext) {\r\n    this.audioCtx = window.AudioContext;\r\n\r\n  } else {\r\n    console.log('No AudioContext found');\r\n  }\r\n\r\n  console.log(window.AudioContext);\r\n\r\n  var self = this;\r\n\r\n  if (binaryData) {\r\n    this.audioCtx.decodeAudioData(binaryData, function(decoded) {\r\n      self.buffer = decoded;\r\n    });\r\n  } else {\r\n    //TODO: throw error\r\n  }\r\n\r\n  if (collection) {\r\n    //TODO: put buffer into soundbank\r\n  }\r\n\r\n};\r\n\r\nmodule.exports = SoundWave;\r\n","/**\r\n * This is the starting point of the library.\r\n * It spawns the audio context object and\r\n * connects it to the audio output.\r\n *\r\n * TODO: - Should we do backwards-compatibility for older api-versions?\r\n *       - Check for mobile/iOS compatibility.\r\n *       - Check if we're running on node (and throw an error if so)\r\n */\r\n'use strict';\r\n\r\nvar Intermix = function() {\r\n  /**\r\n   * create audio context\r\n   */\r\n  window.AudioContext = window.AudioContext || window.webkitAudioContext;\r\n  this.audioCtx = null;\r\n  this.output = null;\r\n\r\n  if (window.AudioContext) {\r\n    //new window.AudioContext();\r\n  } else {\r\n    //TODO: throw error, probably surround with try/catch\r\n  }\r\n\r\n  //this.mapContext();\r\n  //console.log(this);\r\n\r\n};\r\n\r\n// Intermix.prototype.mapContext = function() {\r\n//   this.output = this.audioCtx.destination;\r\n//   this.decodeAudioData = this.audioCtx.decodeAudioData;\r\n//   this.createGain = this.audioCtx.createGain;\r\n//   this.createStereoPanner = this.audioCtx.createStereoPanner;\r\n// };\r\n\r\nmodule.exports = Intermix;\r\n"]}